# https://www.playframework.com/documentation/latest/Configuration

# akka {
#   persistence {
#
#     snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
#
# #     cassandra {
# #         datastax-java-driver-config = "datastax-java-driver"
# #     }
#     journal {
#       plugin = "akka.persistence.cassandra.journal"
#       tables-autocreate = true
#
#     }
#   }
# }
#
# cassandra-journal {
#   event-adapters {
#     tagging = "actors.TaggingEventAdapter"
#   }
#
#   event-adapter-bindings {
#     "actors.TaggedEvent" = tagging
#   }
#
#   tags {
#     student-registered-event = 1
#   }
# }
#
# datastax-java-driver.advanced.reconnect-on-init = true

akka {
  actor {
    serializers {
        jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
        jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer"
        proto = "akka.remote.serialization.ProtobufSerializer"
    }

    serialization-bindings {
        "config.EventJacksonSerializer" = jackson-json
    }
  }
  # use Cassandra to store both snapshots and the events of the persistent actors
  persistence {
    journal.plugin = "akka.persistence.cassandra.journal"
    journal.auto-start-journals = ["akka.persistence.cassandra.journal"]
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"

    cassandra {
      events-by-tag {
        bucket-size = "Day"
        eventual-consistency-delay = 2s
        flush-interval = 50ms
        pubsub-notification = on
        first-time-bucket = "20200815T00:00"
      }

      journal {
        event-adapters {
            tagging = "actors.TaggingEventAdapter"
        }

        event-adapter-bindings {
            "actors.TaggedEvent" = tagging
        }

        tags {
            student-registered-event = 1

          }
      }

      query {
        refresh-interval = 2s
      }

      journal.keyspace = "smisstudentregistrationservice"
      snapshot.keyspace = "smisstudentregistrationservice"
    }
  }

}

akka.projection {
  cassandra.offset-store.keyspace = "smisstudentregistrationservice"
  # use same Cassandra session config as for the journal
  cassandra.session-config-path = "akka.persistence.cassandra"
}

datastax-java-driver {
  advanced.reconnect-on-init = on
}

